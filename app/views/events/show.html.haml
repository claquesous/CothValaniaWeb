- content_for :title do
  = @config.events.pluralize + " - " + @event.name

%h1.valigned= @event.name
.pull-right
  = link_to "#{@config.occurrences}", event_occurrences_path(@event), class: "btn btn-success"
  - if leader?
    = link_to 'Edit', [:edit, @event], class: "btn btn-info"
  = link_to 'Back', events_path, class: "btn btn-primary"

%p
  .badge.badge-success= @event.points
  \/
  .badge.badge-important= @event.failure_points || 0
%p
  %b Remarks:
  = @event.remarks
%p
  %b Hidden:
  = @event.hidden
%p
  %b Time:
  = @event.time

.row
  -@event.rewards.each do |r|
    .span4
      %p= link_to r.name, r
      = render 'rewards/list', :reward => r

  - requirements_for = @event.event_requirements.includes(:requirement).collect(&:requirement)
  - unless requirements_for.empty?
    .span4
      %b #{@config.requirements.pluralize} For
      %ol
      - requirements_for.each do |req|
        %li= link_to req.name, req

  - requirements_from = @event.requirement_obtainments.collect(&:requirement)
  - unless requirements_from.empty?
    .span4
      %b #{@config.requirements.pluralize} Obtained From
      %ol
      - requirements_from.each do |req|
        %li= link_to req.name, req

