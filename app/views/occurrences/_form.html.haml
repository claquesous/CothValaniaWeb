= form_for [@event, @occurrence] do |f|
  - if @occurrence.errors.any?
    #error_explanation
      %h2= "#{pluralize(@occurrence.errors.count, "error")} prohibited this occurrence from being saved:"
      %ul
        - @occurrence.errors.full_messages.each do |msg|
          %li= msg
  
  .field
    = f.label :remarks
    = f.text_field :remarks
  .field
    = f.label :start_time
    = f.datetime_select :start_time
  .field
    = f.label :end_time
    = f.datetime_select :end_time
  .field
    = f.label :success
    = f.check_box :success
  %h3 Attendees
  %table
    - @members.each_with_index do |m,i|
      - if (new_ea = f.object.event_attendances.find{|s| !s.character.nil? && s.character.member == m}).nil?
        - new_ea = EventAttendance.new
      = f.fields_for :event_attendances, new_ea, :child_index => i do |ea|
        %tr
          %td
            .field
              = ea.check_box :_destroy, {:checked => new_ea.persisted?}, 0, 1
              = ea.label :_destroy, m.name
          %td
            - if m.characters.many?
              - m.characters.each do |c|
                = ea.radio_button :character_id, c.id, :checked => (!new_ea.persisted? && c.name==m.name) || ea.object.character_id == c.id
                = ea.label :character, c.name
            - elsif m.characters.any?
              = ea.hidden_field :character_id, :value => m.characters.first.id

  - event_rewards = @event.rewards
  - if event_rewards.count>0
    %h3 Rewards
    = hidden_field_tag "occurrence[character_reward_ids][]"
    - event_rewards.each do |r|
      %br= r.name
      - r.character_rewards.unobtained_or_occurrence(@occurrence).each do |cr|
        = cr.character.nil? ? cr.member.name : cr.character.name
        = check_box_tag "occurrence[character_reward_ids][]", cr.id, cr.occurrence == @occurrence, id: "occurrence_character_reward_ids_#{cr.id}"

  - er = @event.event_requirements
  - ro = @event.requirement_obtainments
  - if er.count>0 || ro.count>0
    %h3 Requirements
    = hidden_field_tag "occurrence[used_requirement_ids][]"
    %table
      %tr
        - er.each do |r|
          %th= r.requirement.name
        %th Character
        - ro.each do |r|
          %th= r.requirement.name
      - @members.each do |m|
        - m.characters.each do |c|
          %tr
            - er.each do |r|
              %td
                -unless (new_ur = get_requirements(r.requirement.character_requirements,c)).nil?
                  = check_box_tag "occurrence[used_requirement_ids][]", new_ur.id, new_ur.used_occurrence == @occurrence, id: "occurrence_used_requirement_ids_#{new_ur.id}"
            %td= c.name
            - ro.each do |r|
              - if (new_ocr = f.object.obtained_requirements.find{|s| s.character == c}).nil?
                - new_ocr = CharacterRequirement.new
              = f.fields_for :obtained_requirements, new_ocr, :child_index => c.name do |ocr|
                %td
                  = ocr.check_box :_destroy, {:checked => new_ocr.persisted?}, 0, 1
                  = ocr.hidden_field :character_id, :value => c.id
                  = ocr.hidden_field :requirement_id, :value => r.requirement.id

  .actions
    = f.submit 'Save'
