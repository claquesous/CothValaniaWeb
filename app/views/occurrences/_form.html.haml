= form_for [@event, @occurrence] do |f|
  - if @occurrence.errors.any?
    #error_explanation
      %h2= "#{pluralize(@occurrence.errors.count, "error")} prohibited this occurrence from being saved:"
      %ul
        - @occurrence.errors.full_messages.each do |msg|
          %li= msg

  .form-horizontal 
    .control-group.field
      .control-label= f.label :remarks
      .controls= f.text_field :remarks
    .control-group.field
      .control-label= f.label :start_time
      .controls= f.datetime_select :start_time
    .control-group.field
      .control-label= f.label :end_time
      .controls= f.datetime_select :end_time
    .control-group.field
      .control-label= f.label :success, :Failed
      .controls= f.check_box :success, {checked: @occurrence.success==false}, 0, 1
    .control-group.field
      .control-label= f.label :optional
      .controls= f.check_box :optional
    %h3 Attendees
    %table.table.table-condensed
      - @members.each_with_index do |m,i|
        - if (new_ea = f.object.event_attendances.includes(:member).find{|s| s.member == m}).nil?
          - new_ea = EventAttendance.new
        = f.fields_for :event_attendances, new_ea, :child_index => i do |ea|
          %tr
            %td
              .form-inline
                = ea.check_box :_destroy, {:checked => new_ea.persisted?}, 0, 1
                = ea.label :_destroy, m.name
            %td
              - if m.characters.many?
                %table.table.table-condensed
                  - m.characters.each do |c|
                    %tr
                      %td.form-inline
                        = ea.radio_button :character_id, c.id, :checked => (!new_ea.persisted? && c.name==m.name) || ea.object.character_id == c.id
                        = ea.label "character_id_#{c.id}", c.name
                        - c.character_jobs.includes(:job).each do |cj|
                          %td.form-inline
                            = ea.radio_button :character_job_id, cj.id, checked: ea.object.character_job_id == cj.id
                            = ea.label "character_job_id_#{cj.id}", cj.job.name
                    
              - else
                = ea.hidden_field :character_id, :value => m.characters.first.id
                %table.table.table-condensed
                  - m.characters.first.character_jobs.includes(:job).each do |cj|
                    %tr
                      %td
                        = ea.radio_button :character_job_id, cj.id, checked: ea.object.character_job_id == cj.id
                        = ea.label "character_job_id_#{cj.id}", cj.job.name
  
    - event_rewards = @event.rewards
    - if event_rewards.count>0
      %h3 #{@config.rewards.pluralize}
      = hidden_field_tag "occurrence[character_reward_ids][]"
      .row
        - event_rewards.each do |r|
          .span3.well
            %b= r.name
            - r.character_rewards.includes(:character).includes(:occurrence).unobtained_or_occurrence(@occurrence).each do |cr|
              .form-inline
                = check_box_tag "occurrence[character_reward_ids][]", cr.id, cr.occurrence == @occurrence, id: "occurrence_character_reward_ids_#{cr.id}"
                = label_tag "occurrence_character_reward_ids_#{cr.id}", cr.character.name
                .badge.badge-info= cr.current_points.round(2)
  
    - er = @event.event_requirements.includes(:requirement)
    - ro = @event.requirement_obtainments.includes(:requirement)
    - if er.count>0 || ro.count>0
      %h3 #{@config.requirements.pluralize}
      = hidden_field_tag "occurrence[used_requirement_ids][]"
      %table.table.table-hover
        %tr
          - er.each do |r|
            %th= r.requirement.name
          %th Character
          - ro.each do |r|
            %th= r.requirement.name
        - @members.each do |m|
          - m.characters.each do |c|
            %tr
              - er.each do |r|
                %td
                  -unless (new_ur = get_requirements(r.requirement.character_requirements.includes(:character).includes(:used_occurrence),c)).nil?
                    = check_box_tag "occurrence[used_requirement_ids][]", new_ur.id, new_ur.used_occurrence == @occurrence, id: "occurrence_used_requirement_ids_#{new_ur.id}"
              %td= c.name
              - ro.each do |r|
                - if (new_ocr = f.object.obtained_requirements.find{|s| s.character == c}).nil?
                  - new_ocr = CharacterRequirement.new
                = f.fields_for :obtained_requirements, new_ocr, :child_index => c.name do |ocr|
                  %td
                    = ocr.check_box :_destroy, {:checked => new_ocr.persisted?}, 0, 1
                    = ocr.hidden_field :character_id, :value => c.id
                    = ocr.hidden_field :requirement_id, :value => r.requirement.id
  
    .form-actions
      = f.submit 'Save', class: "btn btn-primary"
      - if @occurrence.persisted?
        = link_to 'Cancel', event_occurrence_path(@event, @occurrence), class: "btn btn-danger"
      - else
        = link_to 'Cancel', event_occurrences_path(@event), class: "btn btn-danger"
